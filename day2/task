//Day 2:
//Write a function to Fetch JSON data from https://jsonplaceholder.typicode.com/users and return an array of phone numbers of the users.

//1. Do it using callbacks.
//2. Do it using .then syntax.
//3. Do it using async/await

import fetch from "node-fetch";
// 1: callbacks

let getUsers = (fetch_contacts) => {
  setTimeout(() => {
    fetch_contacts();
  }, 2000);
};

let fetchContacts = () => {
  let contacts = [];
  fetch("https://jsonplaceholder.typicode.com/users")
    .then((response) => {
      return response.json();
    })
    .then((data) => {
      contacts = data.map((iter) => {
        return iter.phone;
      });
      console.log("contacts:::", contacts);
      return contacts;
    })
    .catch((err) => {
      console.log(err);
    });
};

const ez = getUsers(fetchContacts);
console.log("outside func ez:", ez);

// --------------
//2: .then syntax (Promise)
// done by using the already returned promise from fetch()

const promise = fetch("https://jsonplaceholder.typicode.com/users").then(
  fetchContacts
);

Promise.all([promise])
  .then((value) => {
    // console.log(value);
  })
  .catch((err) => alert(err));

// -------------
// done by creating new promise

let gettUsers = (fetch_contacts) => {
  return new Promise((resolve, reject) => {
    let ok = true;
    if (ok) {
      setTimeout(() => {
        resolve(fetch_contacts());
      }, 2000);
    } else {
      reject(console.log("Error Occured"));
    }
  });
};

gettUsers(fetchContacts);

//-------------
// 3: async/ await
async function fetchData() {
  const data = await fetch("https://jsonplaceholder.typicode.com/users");

  const res = await data.json();
  const contacts = res.map((iter) => {
    return iter.phone;
  });
  console.log(contacts);
}

fetchData();

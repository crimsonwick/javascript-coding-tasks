// Day 3:
import express from "express";
const app = express();
const PORT = process.env.PORT || 4000;

app.listen(PORT, () => console.log(`Server started on port ${PORT}`));

//fetch data from api

const fetchUsers = async () => {
  try {
    const data = await fetch("https://jsonplaceholder.typicode.com/users");
    const res = await data.json();
    return res;
  } catch (err) {
    console.log(err.message);
  }
};

app.get("/users", async (req, res) => {
  const fetchedUsers = await fetchUsers();
  if (fetchedUsers) {
    let zipcode = req.query.zip;
    if (!zipcode) {
      res.status(200).send(fetchedUsers);
    }
    const filteredUsers = fetchedUsers.filter((iter) => {
      return iter.address.zipcode === zipcode;
    });
    if (filteredUsers === undefined || filteredUsers.length == 0) {
      res.status(404).send("User with given zipcode not found!");
    }
    res.status(200).send(filteredUsers);
  } else {
    res.status(500).send("Internal Server Error");
  }
});

app.get("/posts", async (req, res) => {
  try {
    let data = await fetch("https://jsonplaceholder.typicode.com/posts");
    let result = await data.json();

    //searching url?body=*&title=*
    let title = req.query.title;
    let body = req.query.body;

    if (!title && !body) {
      return res.status(200).send(result);
    }

    let filteredPosts = result.filter((iter) => {
      return iter.title.includes(title) || iter.body.includes(body);
    });


    res.status(200).send(filteredPosts);
  } catch (err) {
    console.log(err);
    res.status(500).send("Internal Server Error");
  }
});


app.get("/posts/:id/comments", async (req, res) => {
  try {
    let id = req.params.id;
    id = Number(id);
    let relComms = await fetch(
      `https://jsonplaceholder.typicode.com/posts/${id}/comments`
    );
    let relevantComments = await relComms.json();

    let posts = await fetch("https://jsonplaceholder.typicode.com/posts");
    let allPosts = await posts.json();

    allPosts[id - 1]["comments"] = relevantComments;

    res.status(200).send(allPosts);
  } catch (err) {
    res.status(500).send("Internal Server Error");
  }
});

